import numpy as np

print("컴퓨터는 0 인간은 X입니다.")
print("누가 먼저 시작하시겠습니까")

turn = int(input("플레이어가 먼저 시작하려면 1을 입력해주세요"))

def check_win(turn):
  count = 0
  win = 0
  cross_1 = [[0,0], [1,1], [2,2]]
  cross_2 = [[0,2], [1,1], [2,0]]
  width_1 = [[0,0], [0,1], [0,2]]
  width_2 = [[1,0], [1,1], [1,2]]
  width_3 = [[2,0], [2,1], [2,2]]
  length_1 = [[0,0], [1,0], [2,0]]
  length_2 = [[0,1], [1,1], [2,1]]
  length_3 = [[0,2], [1,2], [2,2]]


  check_line = [cross_1, cross_2, width_1, width_2, width_3, length_1, length_2, length_3]

  for i in check_line:
    count = 0
    for j in i:

      # print(j)

      if turn == 0:
        check_location_x, check_location_y = np.where(board == '0')

        for e in range(len(check_location_x)):
          if j[0] == check_location_x[e] and j[1] == check_location_y[e]:
            count = count + 1

        if count == 3:
          win = 1
          return win

      elif turn == 1:
        check_location_x, check_location_y = np.where(board == 'X')


        for e in range(len(check_location_x)):
          if j[0] == check_location_x[e] and j[1] == check_location_y[e]:
            count = count + 1

        if count == 3:
          win = 2
          return win
      
    boid_check_location_x, boid_check_location_y = np.where(board == ' ')

    if len(boid_check_location_x) == 0:
      win = 3
        

  return win


def act():
  location = map(int, input("바꿀칸의 좌표를 입력해주세요").split())
  location = list(location)
  while True:
    if board[location[0]-1, location[1]-1] == "0" or board[location[0]-1, location[1]-1] == "X":
      print("그곳에는 놓을수 없습니다.")
      location = map(int, input("바꿀칸의 좌표를 입력해주세요").split())
      location = list(location)
    else:
      break
      
  return location
 
def computer(board):

  count = 0

  cross_1 = [[0,0], [1,1], [2,2]]
  cross_2 = [[0,2], [1,1], [2,0]]
  width_1 = [[0,0], [0,1], [0,2]]
  width_2 = [[1,0], [1,1], [1,2]]
  width_3 = [[2,0], [2,1], [2,2]]
  length_1 = [[0,0], [1,0], [2,0]]
  length_2 = [[0,1], [1,1], [2,1]]
  length_3 = [[0,2], [1,2], [2,2]]
  check_line = [cross_1, cross_2, width_1, width_2, width_3, length_1, length_2, length_3]

  player_check_location_x, player_check_location_y = np.where(board == 'X')

  release = 0

  # warning = 0

  # 중간에 돌 놓기
  if board[1,1] == ' ':
    board[1, 1] = "0"
  
  
  else:
    for i in check_line:
        count = 0
        warning = 0
        for j in i:
          for e in range(len(player_check_location_x)):
            if j[0] == player_check_location_x[e] and j[1] == player_check_location_y[e]:
              count = count + 1

    # 상대방이 이기는 수
              if count == 2:
                if board[i[1][0], i[1][1]] == " ":
                  board[i[1][0], i[1][1]] = "0"
                  release = 1
                  break
                elif board[i[2][0], i[2][1]] == " ":
                  board[i[2][0], i[2][1]] = "0"
                  release = 1
                  break
                  return board
    

    # 이기는 선들을 탐색해서 이길 수 있는곳에 돌 놔두기
    if release == 0:
      for i in check_line:
        for j in i:
          if board[j[0],j[1]] == ' ':
            if board[i[0][0], i[0][1]] == "X":
              break

            elif board[i[1][0], i[1][1]] == "X":
              break
            
            elif board[i[2][0], i[2][1]] == "X":
              break
            
            else:
              board[j[0],j[1]] = '0'
            
            return board

  return board
  
  
while win == 0:
  print(board)
  if turn == 1:
    print("====== 플레이어 차례입니다.========")
    location = act()
    board[location[0]-1, location[1]-1] = "X"
    win = check_win(1)
    if win == 2:
      print("====== 플레이어의 승리입니다. ======")
      print(board)
      break
    turn = 0
  


  elif turn == 0:
    print("====== 컴퓨터의 차례입니다.========")
    board = computer(board)
    win = check_win(0)
    if win == 1:
      print("====== 컴퓨터의 승리입니다. ======")
      print(board)
      break
    turn = 1
  
  if win == 3:
    print("====== 무승부 입니다. ======")
    print(board)
    break
