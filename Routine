from this import d
from turtle import clear
import pandas as pd



class each_exercise:
    def __init__(self, first, second, third):
        self.first_part = first
        self.second_part = second
        self.third_part = third

        self.score = {}

        self.first_score = 5
        self.second_score = 3
        self.third_score = 1
        
    def exercizedata_load(self):
        self.Data = pd.read_csv('./exercize.csv',encoding='CP949')
        self.exercize_data = self.Data['name']

        for k in self.exercize_data:
            self.score[k] = 0
                
    def first_Exercise_recommendation(self):  
        number = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]

        first_result = {}
        first_number = [    ]

        second_result = {}
        second_number = []

        third_result = {}
        third_number = []
        
        first_number = self.Exercise_recommendation(number, self.first_part ,1)

        if len(first_number) > 0:
            first_second_number = self.Exercise_recommendation(first_number,self.second_part, 2)
            
            if len(first_second_number) > 0:
                first_third_number = self.Exercise_recommendation(first_second_number,self.third_part, 3)
    
                            
            else:
                first_third_number = self.Exercise_recommendation(first_number,self.third_part, 3)
                
        

        elif len(first_result) == 0:
            second_number = self.Exercise_recommendation(number, self.second_part, 2)
                    
            for j in second_number:
                for k in first_number:
                    if j == k:
                        del_exercize = self.exercize_data[k]

                        del second_result[del_exercize]
                        second_number.remove(k)

            if len(second_result) > 0:
                second_second_number = self.Exercise_recommendation(second_number,self.third_part, 3)

            third_number = self.Exercise_recommendation(number, self.third_part, 3)

            for j in third_number:
                for k in second_number:
                    if j == k:
                        del_exercize = self.exercize_data[k]
                        del(third_result[del_exercize])
                        third_number.remove(k)
                
        return self.output()
              
    def Exercise_recommendation(self,previous_number, muscle, Ranking):
        number = []

        if Ranking == 1:
            for k in previous_number:
                if self.Data.at[k, muscle] == 9:
                    self.score[self.exercize_data[k]] += self.first_score + 4
                    number.append(k)

                elif self.Data.at[k, muscle] == 5:
                    self.score[self.exercize_data[k]] += self.first_score + 3
                    number.append(k)

                elif self.Data.at[k, muscle] == 3:
                    self.score[self.exercize_data[k]] += self.first_score + 1
                    number.append(k)
        
        elif Ranking == 2:
             for k in previous_number:
                if self.Data.at[k, muscle] == 9:
                    self.score[self.exercize_data[k]] += self.second_score + 4
                    number.append(k)

                elif self.Data.at[k, muscle] == 5:
                    self.score[self.exercize_data[k]] += self.second_score + 3
                    number.append(k)

                elif self.Data.at[k, muscle] == 3:
                    self.score[self.exercize_data[k]] += self.second_score + 1
                    number.append(k)

        elif Ranking == 3:
             for k in previous_number:
                if self.Data.at[k, muscle] == 9:
                    self.score[self.exercize_data[k]] += self.third_score + 4
                    number.append(k)

                elif self.Data.at[k, muscle] == 5:
                    self.score[self.exercize_data[k]] += self.third_score + 3
                    number.append(k)

                elif self.Data.at[k, muscle] == 3:
                    self.score[self.exercize_data[k]] += self.third_score + 1
                    number.append(k)

        
        return number

    def output(self):
        output = []
        print("######")
        self.score = sorted(self.score.items(), key=lambda x:x[1], reverse=True)
        
        for key, value in self.score:
            if value > 0:    
                output.append('{}-{}'.format(key, value))
        print(output)
        return output
           
    def start(self):
        self.exercizedata_load()
        return self.first_Exercise_recommendation()

ad = each_exercise('승모근', '광배근', '이두근')
ad.start()
